{"ast":null,"code":"var _jsxFileName = \"/Users/apprenant11/Desktop/my-app/src/components/SignInForm2.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignInForm2 = () => {\n  _s();\n  // Step 1: Create a formik object using the useFormik hook\n  const formik = useFormik({\n    // Step 2: Define the initial form values\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    // Step 3: Define validation rules using Yup schema\n    validationSchema: Yup.object({\n      email: Yup.string().required().email(\"Email format is required\"),\n      password: Yup.string().required().min(4, \"Password field has to have 4 characters\").max(15, \"Password field has not to exceed 15 characters\")\n    }),\n    // Step 4: Define the onSubmit handler for form submission\n    onSubmit: values => {\n      console.log(\"Form submitted successfully\");\n      console.log(values);\n      // Step 5: Handle form submission with authentication\n      handleAuthentication(values);\n    }\n  });\n\n  // Step 5: Handle authentication\n  const handleAuthentication = async values => {\n    try {\n      const response = await fetch(\"http://localhost:3000/auth/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      });\n      if (response.ok) {\n        const {\n          jwt\n        } = await response.json();\n        localStorage.setItem(\"jwt\", jwt);\n        console.log(\"Authentication successful:\", jwt);\n      } else {\n        console.error(\"Authentication failed\");\n      }\n    } catch (error) {\n      console.error(\"Authentication error\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SignInForm2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: formik.handleChange // Handle input changes\n          ,\n          onBlur: formik.handleBlur // Handle input blur events for validation\n          ,\n          value: formik.values.email // Bind input value to formik state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.red,\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.red,\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SignInForm2, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = SignInForm2;\nconst styles = {\n  red: {\n    color: \"red\"\n  }\n};\nexport default SignInForm2;\nvar _c;\n$RefreshReg$(_c, \"SignInForm2\");","map":{"version":3,"names":["React","useFormik","Yup","jsxDEV","_jsxDEV","SignInForm2","_s","formik","initialValues","email","password","validationSchema","object","string","required","min","max","onSubmit","values","console","log","handleAuthentication","response","fetch","method","headers","body","JSON","stringify","ok","jwt","json","localStorage","setItem","error","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","name","onChange","handleChange","onBlur","handleBlur","value","touched","errors","style","styles","red","_c","color","$RefreshReg$"],"sources":["/Users/apprenant11/Desktop/my-app/src/components/SignInForm2.js"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst SignInForm2 = () => {\n  // Step 1: Create a formik object using the useFormik hook\n  const formik = useFormik({\n    // Step 2: Define the initial form values\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    // Step 3: Define validation rules using Yup schema\n    validationSchema: Yup.object({\n      email: Yup.string().required().email(\"Email format is required\"),\n      password: Yup.string()\n        .required()\n        .min(4, \"Password field has to have 4 characters\")\n        .max(15, \"Password field has not to exceed 15 characters\"),\n    }),\n    // Step 4: Define the onSubmit handler for form submission\n    onSubmit: (values) => {\n      console.log(\"Form submitted successfully\");\n      console.log(values);\n      // Step 5: Handle form submission with authentication\n      handleAuthentication(values);\n    },\n  });\n\n  // Step 5: Handle authentication\n  const handleAuthentication = async (values) => {\n    try {\n      const response = await fetch(\"http://localhost:3000/auth/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(values),\n      });\n      if (response.ok) {\n        const { jwt } = await response.json();\n        localStorage.setItem(\"jwt\", jwt);\n        console.log(\"Authentication successful:\", jwt);\n      } else {\n        console.error(\"Authentication failed\");\n      }\n    } catch (error) {\n      console.error(\"Authentication error\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>SignInForm2</h3>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div>\n          {/* Step 6: Render the email input field */}\n          <label>Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange} // Handle input changes\n            onBlur={formik.handleBlur} // Handle input blur events for validation\n            value={formik.values.email} // Bind input value to formik state\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div style={styles.red}>{formik.errors.email}</div>\n          ) : null}\n        </div>\n        <div>\n          {/* Step 7: Render the password input field */}\n          <label>Password</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div style={styles.red}>{formik.errors.password}</div>\n          ) : null}\n        </div>\n        {/* Step 8: Render the submit button */}\n        <button type=\"submit\">Log in</button>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  red: {\n    color: \"red\",\n  },\n};\n\nexport default SignInForm2;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}